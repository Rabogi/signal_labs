import matplotlib.pyplot as plt
import scipy.fft as sp
import math
import cmath

sw = True

N = 16
filter = 10000
A = [1,5,3,7,3,2,1]
f = [0.5,1,2,5,7,9,12]

samples = range(0,N)

k = 7
pi = math.pi

f = [i*1000 for i in f]

fd = 75000
if max(f) > 30000:
    fd = 110000
Td = 1/fd

# Пункт 1 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
t = []
x = []

# Построение изначального сигнала сигнала по сэмплам
for n in samples:
    t.append(n * Td)
    x.append(0)
    for i in range(0,k):
        x[n] += A[i] * math.sin(2*pi*f[i]*t[n])


# Пункт 2 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

xdpf = sp.fft(x)

# Пункт 3 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

def Wf(x):
    return (math.e**(cmath.sqrt(-1)*2*(pi/N)*x))

def B(A,B,W):
    return [A+B*W,A-B*W]

